name: Tests

on: [push, pull_request]

jobs:
  test:
    name: ${{ matrix.os }}-${{ matrix.architecture }} Py${{ matrix.python }} GEOS ${{ matrix.geos }} speedups ${{ matrix.speedups }} numpy ${{ matrix.numpy || 'not installed' }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-2019]
        architecture: [x64]
        geos: [3.6.5, 3.7.3, 3.8.1, 3.9.2, 3.10.2]
        include:
          # 2017
          - python: 3.6
            geos: 3.6.5
            numpy: 1.13.3
            speeedups: 1
          - python: 3.6
            geos: 3.6.5
            numpy: 1.13.3
            speeedups: 0
          - python: 3.6
            geos: 3.6.5
            speeedups: 0
          # 2018
          - python: 3.7
            geos: 3.7.3
            numpy: 1.15.4
            speedups: 1
          - python: 3.7
            geos: 3.7.3
            numpy: 1.15.4
            speedups: 0
          - python: 3.7
            geos: 3.7.3
            speedups: 0
          # 2019
          - python: 3.8
            geos: 3.8.1
            numpy: 1.17.5
            speedups: 1
          - python: 3.8
            geos: 3.8.1
            numpy: 1.17.5
            speedups: 0
          - python: 3.8
            geos: 3.8.1
            speedups: 0
          # 2020
          - python: 3.9
            geos: 3.9.2
            numpy: 1.19.5
            speedups: 1
          - python: 3.9
            geos: 3.9.2
            numpy: 1.19.5
            speedups: 0
          - python: 3.9
            geos: 3.9.2
            speedups: 0
          # 2021
          - python: "3.10"
            geos: 3.10.2
            numpy: 1.21.3
            speedups: 1
          - python: "3.10"
            geos: 3.10.2
            numpy: 1.21.3
            speedups: 0
          - python: "3.10"
            geos: 3.10.2
            speedups: 0
          # enable two 32-bit windows builds
          - os: windows-2019
            architecture: x86
            python: 3.6
            geos: 3.6.5
            numpy: 1.13.3
            speeedups: 1
          - os: windows-2019
            architecture: x86
            python: 3.9
            geos: 3.10.2
            numpy: 1.19.5
            speeedups: 1

    env:
      GEOS_VERSION: ${{ matrix.geos }}
      GEOS_INSTALL: ${{ github.workspace }}/geosinstall/geos-${{ matrix.geos }}
      GEOS_BUILD: ${{ github.workspace }}/geosbuild
      SPEEDUPS: ${{ matrix.speedups }}

    steps:
      - name: Correct slashes in GEOS_INSTALL (Windows)
        run: |
          echo 'GEOS_INSTALL=${{ github.workspace }}\geosinstall\geos-${{ matrix.geos }}' >> $GITHUB_ENV
          echo 'GEOS_BUILD=${{ github.workspace }}\geosbuild' >> $GITHUB_ENV
        if: ${{ matrix.os == 'windows-2019' }}

      - name: Checkout Shapely
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
          architecture: ${{ matrix.architecture }}

      - name: Cache GEOS and pip packages
        uses: actions/cache@v2
        with:
          key: ${{ matrix.os }}-${{ matrix.architecture }}-geos-${{ env.GEOS_VERSION }}-${{ hashFiles('ci/install_geos.sh') }}
          path: |
            ~/.cache/pip
            ${{ github.workspace }}/geosinstall

      - name: Activate MSVC
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.architecture }}
        if: ${{ matrix.os == 'windows-2019' }}

      - name: Install GEOS
        run: |
          bash ci/install_geos.sh

      - name: Install python dependencies
        run: |
          pip install --disable-pip-version-check --user --upgrade pip
          pip install --upgrade wheel setuptools<65
          if [ "$SPEEDUPS" == "1" ]; then
            pip install --install-option="--no-cython-compile" cython;
            pip install --upgrade numpy==${{ matrix.numpy }};
          elif [ -n "${{ matrix.numpy }}" ]; then
            pip install --upgrade numpy==${{ matrix.numpy }};
          else
            pip uninstall --yes numpy;
          fi
          pip install --upgrade coveralls pytest-cov pytest
          pip list

      - name: Set environment variables (Linux)
        run: |
          echo "${{ env.GEOS_INSTALL }}/bin" >> $GITHUB_PATH
          echo "LD_LIBRARY_PATH=${{ env.GEOS_INSTALL }}/lib" >> $GITHUB_ENV
        if: ${{ matrix.os == 'ubuntu-latest' }}

      - name: Set environment variables (macOS)
        run: |
          echo "${{ env.GEOS_INSTALL }}/bin" >> $GITHUB_PATH
          echo "DYLD_LIBRARY_PATH=${{ env.GEOS_INSTALL }}/lib" >> $GITHUB_ENV
          echo "LDFLAGS=-Wl,-rpath,${{ env.GEOS_INSTALL }}/lib" >> $GITHUB_ENV
        if: ${{ matrix.os == 'macos-latest' }}

      # Windows requires special treatment:
      # - geos-config does not exist, so we specify include and library paths
      # - Python >=3.8 ignores the PATH for finding DLLs, so we copy them into the package
      - name: Set environment variables + copy DLLs (Windows)
        run: |
          echo "${{ env.GEOS_INSTALL }}\bin" >> $GITHUB_PATH
          if [ "${{ matrix.architecture }}" == "x86" ]; then
            DLL_DIR=DLLs_x86_VC9
          elif [ "${{ matrix.architecture }}" == "x64" ]; then
            DLL_DIR=DLLs_AMD64_VC9
          fi
          cp geosinstall/geos-${{ matrix.geos }}/bin/*.dll $DLL_DIR
          echo 'GEOS_LIBRARY_PATH=${{ env.GEOS_INSTALL }}\bin\geos_c.dll' >> $GITHUB_ENV
        if: ${{ matrix.os == 'windows-2019' }}

      - name: Build and install Shapely
        run: |
          export DYLD_LIBRARY_PATH=${{ env.DYLD_LIBRARY_PATH }}
          pip install -v -e .

      - name: Overview of the Python environment (pip list)
        run: |
          pip list

      - name: Run tests
        run: |
          export DYLD_LIBRARY_PATH=${{ env.DYLD_LIBRARY_PATH }}
          if [ "$SPEEDUPS" == "1" ]; then SPEEDUPS_FLAG=--with-speedups; else SPEEDUPS_FLAG=--without-speedups; fi
          python -c "from shapely import geos; print(geos.geos_version_string)"
          python -c "from shapely import speedups; print(speedups.enabled)"
          python -m pytest --cov shapely --cov-report term-missing "${SPEEDUPS_FLAG}"

      - name: Run doctests
        if: ${{ matrix.python == '3.9' && matrix.numpy && matrix.speedups == '1' }}
        run: |
          python -m pytest shapely --doctest-modules

      - name: Upload coverage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_PARALLEL: true
        run: |
          coveralls --service=github || echo "!! intermittent coveralls failure"

  coveralls:
    name: Indicate completion to coveralls.io
    needs: test
    runs-on: ubuntu-latest
    container: python:3-slim
    steps:
    - name: Finished
      run: |
        pip3 install --upgrade coveralls
        coveralls --finish || echo "!! intermittent coveralls failure"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
