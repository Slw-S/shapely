name: Build and publish

on:
  push:
    tags:
      - '*'  # Triggers the workflow on version tags

env:
  GEOS_VERSION: "3.13.1"

jobs:
  
  build_wheels_mac_win:
    name: Build ${{ matrix.arch }} wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
    
          - os: windows-2019
            arch: AMD64
            msvc_arch: x64
          
          - os: windows-11-arm
            arch: ARM64
            msvc_arch: ARM64
          
          - os: macos-14
            arch: arm64
            cmake_osx_architectures: arm64

    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache GEOS build
        uses: actions/cache@v4
        with:
          path: ${{ runner.temp }}/geos-${{ env.GEOS_VERSION }}
          key: ${{ matrix.os }}-${{ matrix.arch }}-${{ env.GEOS_VERSION }}-${{ hashFiles('ci/*') }}

      - name: Add GEOS LICENSE
        run: cp ci/wheelbuilder/LICENSE_GEOS .
        shell: bash

      - name: Add MSVC LICENSE
        run: cp ci/wheelbuilder/LICENSE_win32 .
        shell: bash
        if: ${{ matrix.os == 'windows-2019' }}

      - name: Activate MSVC
        uses: ilammy/msvc-dev-cmd@v1.13.0
        with:
          arch: ${{ matrix.msvc_arch }}
        if: ${{ matrix.msvc_arch }}

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.23.3
        env:
          CIBW_ARCHS: ${{ matrix.arch }}
          CIBW_ENVIRONMENT_MACOS:
            GEOS_INSTALL=${{ runner.temp }}/geos-${{ env.GEOS_VERSION }}
            GEOS_CONFIG=${{ runner.temp }}/geos-${{ env.GEOS_VERSION }}/bin/geos-config
            MACOSX_DEPLOYMENT_TARGET=10.9
            CMAKE_OSX_ARCHITECTURES='${{ matrix.cmake_osx_architectures }}'
            CFLAGS='-Wno-error=incompatible-function-pointer-types'
          CIBW_ENVIRONMENT_WINDOWS:
            GEOS_INSTALL='${{ runner.temp }}\geos-${{ env.GEOS_VERSION }}'
            GEOS_LIBRARY_PATH='${{ runner.temp }}\geos-${{ env.GEOS_VERSION }}\lib'
            GEOS_INCLUDE_PATH='${{ runner.temp }}\geos-${{ env.GEOS_VERSION }}\include'
          CIBW_BEFORE_ALL_MACOS: ./ci/install_geos.sh
          CIBW_BEFORE_ALL_WINDOWS: ci\install_geos.cmd
          # TEMP don't use automated/isolated build environment, but manually
          # install build dependencies so we can build with cython 3.1.0a0
          # once Cython and numpy have official releases that support free threading we can remove this
          CIBW_BUILD_FRONTEND: "pip; args: --no-build-isolation"
          CIBW_BEFORE_BUILD: |
            # For free threading support in Cython install a pre-release version of Cython
            python -c "import sysconfig, subprocess; subprocess.check_call(['pip', 'install', '--pre', 'cython'] if sysconfig.get_config_var('Py_GIL_DISABLED') else ['pip', 'install', 'cython'])" &&
            pip install numpy setuptools wheel
          CIBW_BEFORE_BUILD_WINDOWS:
            # For free threading support in Cython install a pre-release version of Cython
            python -c "import sysconfig, subprocess; subprocess.check_call(['pip', 'install', '--pre', 'cython'] if sysconfig.get_config_var('Py_GIL_DISABLED') else ['pip', 'install', 'cython'])" &&
            pip install numpy setuptools wheel &&
            pip install delvewheel
          CIBW_REPAIR_WHEEL_COMMAND_WINDOWS: delvewheel repair --add-path ${{ runner.temp }}\geos-${{ env.GEOS_VERSION }}\bin -w {dest_dir} {wheel}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-${{ matrix.os }}-${{ matrix.arch }}
          path: ./wheelhouse/*.whl
          retention-days: 5
          compression-level: 0

  publish:
    name: Publish on GitHub
    needs: [build_wheels_mac_win]
    runs-on: ubuntu-latest
    steps:
     
      - name: Checkout code
        uses: actions/checkout@v4
      
      - uses: actions/download-artifact@v4
        with:
          name: release-macos-14-arm64
          path: dist
      
      - uses: actions/download-artifact@v4
        with:
          name: release-windows-11-arm-ARM64 
          path: dist
          
      - uses: actions/download-artifact@v4
        with:
          name: release-windows-2019-AMD64
          path: dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
          body: |
            Unofficial devel wheels for testing
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
